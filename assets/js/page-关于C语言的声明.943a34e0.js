(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{1145:function(s,n,e){"use strict";e.r(n);var a=e(1),t=Object(a.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"关于c语言-ifndef-define-endif-ifdef"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关于c语言-ifndef-define-endif-ifdef"}},[s._v("#")]),s._v(" 关于C语言 #ifndef #define #endif #ifdef")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("参考："),e("a",{attrs:{href:"https://www.cnblogs.com/challenger-vip/p/3386819.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.cnblogs.com/challenger-vip/p/3386819.html"),e("OutboundLink")],1)])]),s._v(" "),e("li",[e("p",[s._v("关于 "),e("code",[s._v("#ifndef")]),s._v(" "),e("code",[s._v("#define")]),s._v(" "),e("code",[s._v("#endif")]),s._v(" "),e("code",[s._v("#ifdef")])])]),s._v(" "),e("li",[e("p",[s._v("诠释")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("一般这是用于多文件编译避免大量声明冲突")])]),s._v(" "),e("li",[e("p",[s._v("一般格式")]),s._v(" "),e("div",{staticClass:"language-jsx line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-jsx"}},[e("code",[s._v("#ifndef "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("标识"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" \n#define "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("标识"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" \n\n········\n········\n\n#endif\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("ul",[e("li",[e("p",[e("code",[s._v("<标识>")]),s._v(" 在理论上来说是自由命名的，作用是标识不同的文件，标准的标识是头文件名的全大写, "),e("code",[s._v(".")]),s._v("替换为 "),e("code",[s._v("_")])]),s._v(" "),e("div",{staticClass:"language-jsx line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-jsx"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*若文件名为study,h*/")]),s._v("\n#ifndef _STUDY_H_ \n#define _STUDY_H_\n\n········\n········\n\n#endif\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])])])])])])]),s._v(" "),e("li",[e("p",[e("code",[s._v("ifndef")]),s._v(" & "),e("code",[s._v("#endif")])]),s._v(" "),e("ul",[e("li",[e("p",[s._v("他是 if not define 的简写，是宏地呢一的一种，确切的说是预处理功能三种（宏定义、文件包含、条件编译）中的一种条件编译")])]),s._v(" "),e("li",[e("p",[s._v("在c语言中，对同一个变量或者函数进行多次声明是不会报错的。所以如果h文件里只是进行了声明工作，即使不使用# ifndef宏定义，多个c文件包含同一个h文件也不会报错。")])]),s._v(" "),e("li",[e("p",[s._v("但是在c++语言中，#ifdef的作用域只是在单个文件中。所以如果h文件里定义了全局变量，即使采用#ifdef宏定义，多个c文件包含同一个h文件还是会出现全局变量重定义的错误。")])]),s._v(" "),e("li",[e("p",[s._v("使用#ifndef可以避免下面这种错误：如果在h文件中定义了全局变量，一个c文件包含同一个h文件多次，如果不加#ifndef宏定义，会出现变量重复定义的错误；如果加了#ifndef，则不会出现这种错误。")])]),s._v(" "),e("li",[e("p",[s._v("#ifndef 和 #endif 要一起使用，如果丢失#endif，可能会报错。")])]),s._v(" "),e("li",[e("p",[s._v("示例")]),s._v(" "),e("div",{staticClass:"language-jsx line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-jsx"}},[e("code",[s._v("#ifndef x            "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//先测试x是否被宏定义过")]),s._v("\n#define x\n   程序段"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("blabla"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//如果x没有被宏定义过，定义x，并编译程序段 1")]),s._v("\n#endif   \n　　程序段"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("blabla"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v("　　 "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//如果x已经定义过了则编译程序段2的语句，“忽视”程序段 1")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])])])])]),s._v(" "),e("li",[e("p",[e("code",[s._v("#ifdef")])]),s._v(" "),e("ul",[e("li",[e("p",[s._v("简写：if define")])]),s._v(" "),e("li",[e("p",[s._v("示例")]),s._v(" "),e("div",{staticClass:"language-jsx line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-jsx"}},[e("code",[s._v("#ifndef  x \n#define x   "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//如果宏定义了x，则执行程序1.")]),s._v("\n    程序段 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n#"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("       "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//否则执行陈旭2")]),s._v("\n    程序段 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n#endif\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*****************\n你也可以这样\n它的作用是 当“表达式”值为真时。编译程序段1。\n否则则编译程序段2。\n当没有程序段2时，直接是#if---#endif\n*****************/")]),s._v("\n#"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" 表达式\n    程序段 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n#"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n    程序段 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n#endif\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])])])])]),s._v(" "),e("li",[e("p",[e("code",[s._v("#define")])]),s._v(" "),e("ul",[e("li",[s._v("在C或C++语言源程序中允许用一个标识符来表示一个字符串，称为“宏”。“define”为宏定义命令。")])])])])])}),[],!1,null,null,null);n.default=t.exports}}]);