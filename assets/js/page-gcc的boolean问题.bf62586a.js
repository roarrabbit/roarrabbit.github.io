(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{1128:function(e,s,t){"use strict";t.r(s);var a=t(1),r=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("因为当指针"),t("code",[e._v("free")]),e._v("后，"),t("code",[e._v("free")]),e._v("函数指向将指针指向的内存空间释放了（内存中存储的值），但并没有将指针指向的值释放，指针仍然指向被释放的内存中，此时指针可以被称为“野指针”")]),e._v(" "),t("ul",[t("li",[e._v("为了避免出现问题所以最好先"),t("code",[e._v("free")]),e._v(" 了之后，再将NULL赋值给指针，")]),e._v(" "),t("li",[e._v("野指针：“野指针”与空指针不同，“野指针”有指向的内存地址，对野指针操作很容易造成不确定的问题。\n"),t("ul",[t("li",[e._v("因为对于程序来说这个地址已经释放掉了，但倘若系统正在使用这个内存时程序同时调用了那就会造成不确定的问题了。")]),e._v(" "),t("li",[e._v("所以为了保险起见，最后建议将NULL赋值给野指针")])])])])])}),[],!1,null,null,null);s.default=r.exports},1132:function(e,s,t){"use strict";t.r(s);var a=t(1),r=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("在学习数据结构过程中，使用vscode+gcc方案实现c语言运行的时候发现使用bool类型的时候会报错，即使"),t("code",[e._v("#include <stdbool.h>")]),e._v(" vscode貌似运行没问题，但是也会将代码识别为错误，于网上查找后发现是gcc自身的问题，一般的解决办法是添加#define")]),e._v(" "),t("p",[e._v("所以这里列出两种解决方案")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("使用 "),t("code",[e._v("#include <stdiobool.h")]),e._v(" ，即使vscode报错也无视，就是不太好看")])]),e._v(" "),t("li",[t("p",[e._v("在 main() 前提前定义 bool")]),e._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("bool")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("char")])])]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("true")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")])])]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("define")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[e._v("false")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")])])]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])])])])])}),[],!1,null,null,null);s.default=r.exports}}]);